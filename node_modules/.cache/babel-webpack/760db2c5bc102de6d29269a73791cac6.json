{"ast":null,"code":"import DatalabelsPlugin from 'chartjs-plugin-datalabels';\nimport { BaseChartDirective } from 'ng2-charts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng2-charts\";\nexport let PieChartComponent = /*#__PURE__*/(() => {\n  class PieChartComponent {\n    constructor() {\n      // Pie\n      this.pieChartOptions = {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: true,\n            position: 'left',\n            align: 'center',\n            labels: {\n              usePointStyle: true\n            }\n          },\n          datalabels: {\n            formatter: (value, ctx) => {\n              if (ctx.chart.data.labels) {\n                return ctx.chart.data.labels[ctx.dataIndex];\n              }\n            }\n          }\n        }\n      };\n      this.pieChartData = {\n        labels: [['Download', 'Sales'], ['In', 'Store', 'Sales'], 'Mail Sales'],\n        datasets: [{\n          data: [300, 500, 100]\n        }]\n      };\n      this.pieChartType = 'pie';\n      this.pieChartPlugins = [DatalabelsPlugin];\n    }\n\n    ngOnInit() {} // events\n\n\n    chartClicked({\n      event,\n      active\n    }) {\n      console.log(event, active);\n    }\n\n    chartHovered({\n      event,\n      active\n    }) {\n      console.log(event, active);\n    }\n\n    changeLabels() {\n      var _a;\n\n      const words = ['hen', 'variable', 'embryo', 'instal', 'pleasant', 'physical', 'bomber', 'army', 'add', 'film', 'conductor', 'comfortable', 'flourish', 'establish', 'circumstance', 'chimney', 'crack', 'hall', 'energy', 'treat', 'window', 'shareholder', 'division', 'disk', 'temptation', 'chord', 'left', 'hospital', 'beef', 'patrol', 'satisfied', 'academy', 'acceptance', 'ivory', 'aquarium', 'building', 'store', 'replace', 'language', 'redeem', 'honest', 'intention', 'silk', 'opera', 'sleep', 'innocent', 'ignore', 'suite', 'applaud', 'funny'];\n\n      const randomWord = () => words[Math.trunc(Math.random() * words.length)];\n\n      this.pieChartData.labels = new Array(3).map(_ => randomWord());\n      (_a = this.chart) === null || _a === void 0 ? void 0 : _a.update();\n    }\n\n    addSlice() {\n      var _a;\n\n      if (this.pieChartData.labels) {\n        this.pieChartData.labels.push(['Line 1', 'Line 2', 'Line 3']);\n      }\n\n      this.pieChartData.datasets[0].data.push(400);\n      (_a = this.chart) === null || _a === void 0 ? void 0 : _a.update();\n    }\n\n    removeSlice() {\n      var _a;\n\n      if (this.pieChartData.labels) {\n        this.pieChartData.labels.pop();\n      }\n\n      this.pieChartData.datasets[0].data.pop();\n      (_a = this.chart) === null || _a === void 0 ? void 0 : _a.update();\n    }\n\n    changeLegendPosition() {\n      var _a, _b, _c;\n\n      if ((_b = (_a = this.pieChartOptions) === null || _a === void 0 ? void 0 : _a.plugins) === null || _b === void 0 ? void 0 : _b.legend) {\n        this.pieChartOptions.plugins.legend.position = this.pieChartOptions.plugins.legend.position === 'left' ? 'top' : 'left';\n      }\n\n      (_c = this.chart) === null || _c === void 0 ? void 0 : _c.render();\n    }\n\n    toggleLegend() {\n      var _a, _b, _c;\n\n      if ((_b = (_a = this.pieChartOptions) === null || _a === void 0 ? void 0 : _a.plugins) === null || _b === void 0 ? void 0 : _b.legend) {\n        this.pieChartOptions.plugins.legend.display = !this.pieChartOptions.plugins.legend.display;\n      }\n\n      (_c = this.chart) === null || _c === void 0 ? void 0 : _c.render();\n    }\n\n  }\n\n  PieChartComponent.ɵfac = function PieChartComponent_Factory(t) {\n    return new (t || PieChartComponent)();\n  };\n\n  PieChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PieChartComponent,\n    selectors: [[\"app-pie-chart\"]],\n    viewQuery: function PieChartComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(BaseChartDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n      }\n    },\n    decls: 4,\n    vars: 4,\n    consts: [[1, \"chart\"], [\"baseChart\", \"\", 3, \"data\", \"type\", \"options\", \"plugins\"]],\n    template: function PieChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵelementStart(2, \"div\", 0);\n        i0.ɵɵelement(3, \"canvas\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"data\", ctx.pieChartData)(\"type\", ctx.pieChartType)(\"options\", ctx.pieChartOptions)(\"plugins\", ctx.pieChartPlugins);\n      }\n    },\n    directives: [i1.BaseChartDirective],\n    styles: [\"\"]\n  });\n  return PieChartComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}